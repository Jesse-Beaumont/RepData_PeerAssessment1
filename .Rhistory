version
install.packages("Swirl")
install.packages("swirl")
version
install.packages("ddplyr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot")
install.packages("ggplot2")
r
setwd("C:/SMAUG/datasciencecoursera/ExploratoryAnalysis/RepData_PeerAssessment1")
activity <- read.csv("./activity/activity.csv")
activity <- na.omit(activity)
steps_by_day <- aggregate(list(steps=activity$steps),
list(day = activity$date),
sum)
View(steps_by_day)
hist(steps_by_day$steps, col="lightblue")
hist(steps_by_day$steps, col="lightblue", binwidth=100)
title("Steps Taken per Day")
hist(steps_by_day$steps, col="lightblue")
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(fill = "lightblue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(fill = "lightblue", binwidth= 1000)
library(ggplot2)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(fill = "lightblue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.5, fill = "lightblue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.5, fill = "blue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.5, fill = "lightblue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.8, fill = "lightblue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.5, fill = "purple", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.5, fill = "blue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(day = activity$date),
mean)
View(mean_daily_activity_pattern)
View(activity)
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(day = activity$interval),
mean)
View(mean_daily_activity_pattern)
ggplot(mean_daily_activity_pattern, aes(x = interval, y=mean_steps)) +
geom_line(color="darkblue") +
ggtitle(label = "Average Daily Pattern") +
labs(x = "Interval", y = "Average NUmber of Steps")
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(day = activity$interval),
mean)
head(mean_daily_activity_pattern)
ggplot(mean_daily_activity_pattern, aes(x = interval, y=mean_steps)) +
geom_line(color="darkblue") +
ggtitle(label = "Average Daily Pattern") +
labs(x = "Interval", y = "Average NUmber of Steps")
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(interval = activity$interval),
mean)
head(mean_daily_activity_pattern)
ggplot(mean_daily_activity_pattern, aes(x = interval, y=mean_steps)) +
geom_line(color="darkblue") +
ggtitle(label = "Average Daily Pattern") +
labs(x = "Interval", y = "Average NUmber of Steps")
View(mean_daily_activity_pattern)
View(mean_daily_activity_pattern)
mean_daily_activity_pattern[which.max(mean_daily_activity_pattern$mean_steps)]
mean_daily_activity_pattern[which.max(mean_daily_activity_pattern$mean_steps),]
count_of_missing_values <- sum(is.na(activity$steps))
sum(is.na(activity$steps))
activity <- read.csv("./activity/activity.csv")
steps_by_day <- aggregate(list(steps=activity$steps),
list(day = activity$date),
sum)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
summary(steps_by_day)
mean(steps_by_day$steps)
median(steps_by_day$steps)
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(interval = activity$interval),
mean)
head(mean_daily_activity_pattern)
ggplot(mean_daily_activity_pattern, aes(x = interval, y=mean_steps)) +
geom_line(color="darkblue") +
ggtitle(label = "Average Daily Activity Pattern") +
labs(x = "Interval", y = "Average Number of Steps")
sum(is.na(activity$steps))
activity <- read.csv("./activity/activity.csv")
steps_by_day <- aggregate(list(steps=activity$steps),
list(day = activity$date),
sum)
ggplot(steps_by_day, aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
mean_daily_activity_pattern <- aggregate(list(mean_steps=activity$steps),
list(interval = activity$interval),
mean)
head(mean_daily_activity_pattern)
ggplot(na.omit(steps_by_day), aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
ggplot(na.omit(steps_by_day), aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
summary(steps_by_day)
head(mean_daily_activity_pattern)
mean_daily_activity_pattern <- aggregate(list(mean_steps=na.omit(activity)$steps),
list(interval = na.omit(activity)$interval),
mean)
head(mean_daily_activity_pattern)
count_of_missing_values <- sum(is.na(activity$steps))
is.na(activity)
vector_of_nas <- is.na(activity)
class(vector_of_nas)
missing_obs_idx <- is.na(activity)
missing_obs_idx <- is.na(activity$steps)
class(missing())
class(missing_obs_idx)
rm(missing_obs_idx)
rm(missing_obs_idx)
missing_obs_vector <- is.na(activity$steps)
activity2 <- activity
count_of_missing_values <- sum(is.na(activity2$steps))
missing_obs_vector <- is.na(activity2$steps)
mean_steps_by_interval <- tapply(activity2$steps, activity2$interval,
mean,
na.rm=TRUE,
simplify=TRUE)
count_of_missing_values <- sum(is.na(activity$steps))
missing_obs_vector <- is.na(activity$steps)
mean_steps_by_interval <- tapply(activity$steps, activity$interval,
mean,
na.rm=TRUE,
simplify=TRUE)
activity2 <- activity
activity$interval[missing_obs_vector]
activity$mean_steps_by_interval[missing_obs_vector]
mean_steps_by_interval[missing_obs_vector]
activity$interval[missing_obs_vector]
mean_steps_by_interval
nrow(missing_obs_vector)
missing_obs_vector <- is.na(activity$steps)
length(missing_obs_vector)
mean_steps_by_interval <- tapply(activity$steps, activity$interval,
mean,
na.rm=TRUE,
simplify=TRUE)
length(mean_steps_by_interval)
mean_steps_by_interval[activity$interval[missing_obs_vector]]
activity2$steps[missing_obs_vector] <- mean_steps_by_interval[activity$interval[missing_obs_vector]]
activity2$steps[missing_obs_vector]
activity2$steps
activity2$steps[missing_obs_vector]
count_of_missing_values <- sum(is.na(activity$steps))
missing_obs_vector <- is.na(activity$steps)
mean_steps_by_interval <- tapply(activity$steps, activity$interval,
mean,
na.rm=TRUE,
simplify=TRUE)
activity2 <- activity
View(activity2)
activity2$steps[missing_obs_vector] <- mean_steps_by_interval[as.character(activity$interval[missing_obs_vector])]
View(activity2)
count_of_missing_values <- sum(is.na(activity2$steps))
count_of_missing_values
simplify=TRUE)
steps_by_day <- aggregate(list(steps=activity2$steps),
list(day = activity2$date),
sum)
ggplot(na.omit(steps_by_day), aes(x=steps)) +
geom_histogram(alpha = 0.4, fill = "blue", binwidth= 1000) +
ggtitle(label = "Steps per Day") +
labs(x = "Steps", y = "Count")
activity2 <- activity2$isWeekEnd = ifelse(weekdays(activity2$date) %in% c('Saturday','Sunday'), TRUE, FALSE)
activity2$isWeekEnd = ifelse(weekdays(activity2$date) %in% c('Saturday','Sunday'), TRUE, FALSE)
weekdays(activity2$date)
activity2$isWeekEnd <- ifelse(weekdays(activity2$date) %in% c('Saturday','Sunday'), TRUE, FALSE)
weekdays(activity2$date)
activity2$date
View(activity2)
str(activity2)
activity2$date <- ymd(activity$date)
library(lubridate)
install.packages("lubridate")
library(lubridate)
activity2$date <- ymd(activity$date)
View(activity2)
str(activity2)
activity2$isWeekEnd <- ifelse(weekdays(activity2$date) %in% c('Saturday','Sunday'), TRUE, FALSE)
View(activity2)
activity2$weekdaykind <- ifelse(weekdays(activity2$date) %in% c('Saturday','Sunday'), "weekend", "weekday")
View(activity2)
activity_patern_summary <- aggregate(list(steps=activity2$steps),
list(day = activity2$interval),
mean)
activity_pattern_summary <- aggregate(list(steps=activity2$steps),
list(day = activity2$interval),
mean)
View(activity_pattern_summary)
activity_pattern <- subset(activity2, weekdaykind == "weekday")
View(activity_pattern)
activity_pattern <- subset(activity2, weekdaykind == "weekday")
activity_pattern_summary <- aggregate(list(steps=activity2$steps),
list(day = activity2$interval, weekdaykind),
mean)
View(activity2)
activity_pattern_summary <- aggregate(list(steps=activity2$steps),
list(day = activity2$interval, weekdaykind = activity2$weekdaykind),
mean)
View(activity_pattern_summary)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color=weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ")
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color=weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
facet_wrap(weektype, ncol=1, nrow=2) +
labs(x = "Interval", y = "Steps")
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color=weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
facet_wrap(weekdaykind, ncol=1, nrow=2) +
labs(x = "Interval", y = "Steps")
activity_pattern_summary <- aggregate(list(steps=activity2$steps),
list(interval = activity2$interval, weekdaykind = activity2$weekdaykind),
mean)
rm(activity_patern_summary)
View(activity_pattern_summary)
View(activity_pattern_summary)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
facet_wrap(weekdaykind, ncol=1, nrow=2) +
labs(x = "Interval", y = "Steps")
ggplot(activity_pattern_summary, aes(x = interval, y = steps)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
facet_wrap(weekdaykind, ncol=1, nrow=2) +
labs(x = "Interval", y = "Steps")
ggplot(activity_pattern_summary, aes(x = interval, y = steps)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps")
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps")
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps") +
facet_wrap(weekdaykind)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps") +
facet_wrap(-weekdaykind)
View(activity_pattern_summary)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps") +
facet_wrap(ncol=1, nrow=2)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps") +
facet_grid(. ~ weekdaykind)
ggplot(activity_pattern_summary, aes(x = interval, y = steps, color = weekdaykind)) +
geom_line() +
ggtitle(label = "Average Daily Activity Pattern Weekdays vs. Weekends ") +
labs(x = "Interval", y = "Steps") +
facet_grid(weekdaykind ~ .)
```{r, fig.width=9, fig.height=6}
